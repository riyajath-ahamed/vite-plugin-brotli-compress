name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      create_release:
        description: 'Create GitHub release'
        required: true
        default: true
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:run

      - name: Bump version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # Bump version
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"
          
          # Commit version bump
          git add package.json
          git commit -m "chore: bump version to $NEW_VERSION"
          
          # Create and push tag
          git tag "v$NEW_VERSION"
          git push origin main
          git push origin "v$NEW_VERSION"

      - name: Build package
        run: npm run build

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate Changelog
        id: changelog
        run: |
          # Get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "changelog=Initial release" >> $GITHUB_OUTPUT
          else
            # Generate changelog from commits since last tag
            CHANGELOG=$(git log --pretty=format:"- %s" ${PREVIOUS_TAG}..HEAD)
            if [ -z "$CHANGELOG" ]; then
              echo "changelog=No changes since last release" >> $GITHUB_OUTPUT
            else
              echo "changelog<<EOF" >> $GITHUB_OUTPUT
              echo "$CHANGELOG" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Create GitHub Release
        if: ${{ github.event.inputs.create_release == 'true' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump-version.outputs.new-version }}
          release_name: Release v${{ steps.bump-version.outputs.new-version }}
          draft: false
          prerelease: false
          body: |
            ## Release v${{ steps.bump-version.outputs.new-version }}
            
            This release was manually triggered and generated from commit ${{ github.sha }}.
            
            ### Changes
            ${{ steps.changelog.outputs.changelog }}
            
            ### Installation
            ```bash
            npm install vite-plugin-brotli-compress@v${{ steps.bump-version.outputs.new-version }}
            ```
            
            ### Documentation
            Full documentation: https://github.com/riyajath-ahamed/vite-plugin-brotli-compress#readme
